
package webservicies;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ServiceUser", targetNamespace = "http://WebServicies/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ServiceUser {


    /**
     * 
     * @param nombre
     * @return
     *     returns java.util.List<webservicies.User>
     */
    @WebMethod(operationName = "Consulta")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Consulta", targetNamespace = "http://WebServicies/", className = "webservicies.Consulta")
    @ResponseWrapper(localName = "ConsultaResponse", targetNamespace = "http://WebServicies/", className = "webservicies.ConsultaResponse")
    @Action(input = "http://WebServicies/ServiceUser/ConsultaRequest", output = "http://WebServicies/ServiceUser/ConsultaResponse")
    public List<User> consulta(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre);

    /**
     * 
     * @param idRole
     * @param name
     * @param active
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Crear")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Crear", targetNamespace = "http://WebServicies/", className = "webservicies.Crear")
    @ResponseWrapper(localName = "CrearResponse", targetNamespace = "http://WebServicies/", className = "webservicies.CrearResponse")
    @Action(input = "http://WebServicies/ServiceUser/CrearRequest", output = "http://WebServicies/ServiceUser/CrearResponse")
    public String crear(
        @WebParam(name = "idRole", targetNamespace = "")
        short idRole,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "active", targetNamespace = "")
        int active);

    /**
     * 
     * @param idUser
     * @param idRole
     * @param name
     * @param active
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Actualizar")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Actualizar", targetNamespace = "http://WebServicies/", className = "webservicies.Actualizar")
    @ResponseWrapper(localName = "ActualizarResponse", targetNamespace = "http://WebServicies/", className = "webservicies.ActualizarResponse")
    @Action(input = "http://WebServicies/ServiceUser/ActualizarRequest", output = "http://WebServicies/ServiceUser/ActualizarResponse")
    public String actualizar(
        @WebParam(name = "idUser", targetNamespace = "")
        short idUser,
        @WebParam(name = "idRole", targetNamespace = "")
        short idRole,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "active", targetNamespace = "")
        int active);

    /**
     * 
     * @param idUser
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Eliminar")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Eliminar", targetNamespace = "http://WebServicies/", className = "webservicies.Eliminar")
    @ResponseWrapper(localName = "EliminarResponse", targetNamespace = "http://WebServicies/", className = "webservicies.EliminarResponse")
    @Action(input = "http://WebServicies/ServiceUser/EliminarRequest", output = "http://WebServicies/ServiceUser/EliminarResponse")
    public String eliminar(
        @WebParam(name = "idUser", targetNamespace = "")
        short idUser);

    /**
     * 
     * @param name
     * @return
     *     returns int
     */
    @WebMethod(operationName = "ValidarExiste")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ValidarExiste", targetNamespace = "http://WebServicies/", className = "webservicies.ValidarExiste")
    @ResponseWrapper(localName = "ValidarExisteResponse", targetNamespace = "http://WebServicies/", className = "webservicies.ValidarExisteResponse")
    @Action(input = "http://WebServicies/ServiceUser/ValidarExisteRequest", output = "http://WebServicies/ServiceUser/ValidarExisteResponse")
    public int validarExiste(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ObtenerUsuario")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ObtenerUsuario", targetNamespace = "http://WebServicies/", className = "webservicies.ObtenerUsuario")
    @ResponseWrapper(localName = "ObtenerUsuarioResponse", targetNamespace = "http://WebServicies/", className = "webservicies.ObtenerUsuarioResponse")
    @Action(input = "http://WebServicies/ServiceUser/ObtenerUsuarioRequest", output = "http://WebServicies/ServiceUser/ObtenerUsuarioResponse")
    public String obtenerUsuario();

}
